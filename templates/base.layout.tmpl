{{define "base"}}
<!doctype html>
<html lang="en">

<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<title>Bootstrap demo</title>
	<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/css/bootstrap.min.css" rel="stylesheet"
		integrity="sha384-SgOJa3DmI69IUzQ2PVdRZhwQ+dy64/BUtbMJw1MZ8t5HZApcHrRKUc4W0kG879m7" crossorigin="anonymous">
	<link rel="stylesheet"
		href="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/css/datepicker-bs5.min.css">
	<link rel="stylesheet" type="text/css" href="https://unpkg.com/notie/dist/notie.min.css">
	<link rel="stylesheet" type="text/css" href="/static/css/styles.css">


</head>

<body>
	<nav class="navbar navbar-expand-lg bg-body-tertiary" data-bs-theme="dark">
		<div class="container-fluid">
			<a class="navbar-brand" href="#">Le Hotel</a>
			<button class="navbar-toggler" type="button" data-bs-toggle="collapse"
				data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false"
				aria-label="Toggle navigation">
				<span class="navbar-toggler-icon"></span>
			</button>
			<div class="collapse navbar-collapse" id="navbarSupportedContent">
				<ul class="navbar-nav me-auto mb-2 mb-lg-0">
					<li class="nav-item">
						<a class="nav-link active" aria-current="page" href="/">Home</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/about">About</a>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/search-availability">Book Now</a>
					</li>
					<li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown"
							aria-expanded="false">
							Rooms
						</a>
						<ul class="dropdown-menu">
							<li><a class="dropdown-item" href="/generals-quarters">General's Quarters</a></li>
							<li><a class="dropdown-item" href="/majors-suite">Major's Suite</a></li>
							<li>
								<hr class="dropdown-divider">
							</li>
							<li><a class="dropdown-item" href="/rooms/plans">Floor Plans</a></li>
						</ul>
					</li>
					<li class="nav-item">
						<a class="nav-link" href="/contact" aria-disabled="true">Contact</a>
					</li>
				</ul>
			</div>
		</div>
	</nav>

	{{ block "css" .}}

	{{end}}
	</head>

	<body>
		{{block "content" .}}

		{{end}}




		<div class="row my-footer">
			<div class="col">
				Left
			</div>
			<div class="col">
				Middle
			</div>
			<div class="col">
				Right
			</div>
		</div>


		<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.5/dist/js/bootstrap.bundle.min.js"
			integrity="sha384-k6d4wzSIapyDyv1kpU366/PK5hCdSbCRGRCMv+eplOQJWyd1fbcAu9OCUj5zNLiq"
			crossorigin="anonymous"></script>

		<script src="https://cdn.jsdelivr.net/npm/vanillajs-datepicker@1.3.4/dist/js/datepicker-full.min.js"></script>
		<script src="https://unpkg.com/notie"></script>
		<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


		{{block "js" .}}

		{{end}}


		<script>
			let attention = Prompt();

			// Example starter JavaScript for disabling form submissions if there are invalid fields
			(() => {
				'use strict'

				// Fetch all the forms we want to apply custom Bootstrap validation styles to
				const forms = document.querySelectorAll('.needs-validation')

				// Loop over them and prevent submission
				Array.from(forms).forEach(form => {
					form.addEventListener('submit', event => {
						if (!form.checkValidity()) {
							event.preventDefault()
							event.stopPropagation()
						}

						form.classList.add('was-validated')
					}, false)
				})
			})()




			function notify(msg, msgType) {
				notie.alert({
					type: msgType,
					text: msg,
				})
			}

			{ { with .Flash} }
			notify("{{.}}", "success")
			{ { end } }

			{ { with .Warning} }
			notify("{{.}}", "warning")
			{ { end } }

			{ { with .Error} }
			notify("{{.}}", "error")
			{ { end } }

			function notifyModal(title, text, icon, confirmationButton) {
				Swal.fire({
					title: title,
					html: text,
					icon: icon,
					confirmButtonText: confirmationButton
				})
			}


			function Prompt() {
				let toast = function (c) {
					const {
						msg = "",
						icon = "success",
						position = "top-end",
					} = c;
					const Toast = Swal.mixin({
						toast: true,
						title: msg,
						position: position,
						icon: icon,
						showConfirmButton: false,
						timer: 3000,
						timerProgressBar: true,
						didOpen: (toast) => {
							toast.onmouseenter = Swal.stopTimer;
							toast.onmouseleave = Swal.resumeTimer;
						}
					});
					Toast.fire({});
				}

				let success = function (c) {
					const {
						msg = "",
						title = "",
						footer = "",
					} = c;
					Swal.fire({
						icon: "success",
						title: title,
						text: msg,
						footer: footer,
					});
				}
				let error = function (c) {
					const {
						msg = "",
						title = "",
						footer = "",
					} = c;
					Swal.fire({
						icon: "error",
						title: title,
						text: msg,
						footer: footer,
					});
				}

				async function custom(c) {
					const {
						msg = "",
						title = "",
					} = c;
					const { value: result } = await Swal.fire({
						title: title,
						html: msg,
						backdrop: false,
						focusConfirm: false,
						showCancelButton: true,
						willOpen: () => {
							if (c.willOpen !== undefined) {
								c.willOpen
							}
						},
						preConfirm: () => {
							return [
								document.getElementById("start").value,
								document.getElementById("end").value
							];
						},
						didOpen: () => {
							if (c.didOpen !== undefined) {
								c.didOpen
							}
						}

					})
					if (result) {
						if (result.dismiss !== Swal.DismissReason.cancel) {
							if (result.value !== "") {
								if (c.callback !== undefined) {
									c.callback(result);
								}
							} else {
								c.callback(false);
							}
						} else {
							c.callback(false);
						}
					}
				}



				return {
					toast: toast,
					success: success,
					error: error,
					custom: custom,
				}

			}

		</script>
	</body>

</html>
{{end}}